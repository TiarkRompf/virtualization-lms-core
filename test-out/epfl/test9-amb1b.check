/*****************************************
  Emitting Generated Code                  
*******************************************/
class Test extends ((Int)=>(Unit)) {
def apply(x0:Int): Unit = {
val x1 = println("found:")
val x2 = println(1)
val x3 = println(1)
val x4 = println("found:")
val x5 = println(2)
val x6 = println(2)
val x7 = x0==1
val x12: Unit = if (x7) {
val x8 = println("found:")
val x9 = println(x0)
val x10 = println(1)
x10
} else {
()
}
val x13 = x0==2
val x18: Unit = if (x13) {
val x14 = println("found:")
val x15 = println(x0)
val x16 = println(2)
x16
} else {
()
}
val x19 = x0==3
val x24: Unit = if (x19) {
val x20 = println("found:")
val x21 = println(x0)
val x22 = println(3)
x22
} else {
()
}
()
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
