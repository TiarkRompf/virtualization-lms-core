/*****************************************
  Emitting Generated Code                  
*******************************************/
class Ack extends ((Double)=>(Double)) {
def apply(x0:Double): Double = {
var x4: scala.Function1[Double, Double] = null
var x1: scala.Function1[Double, Double] = null
val x7 = {x8: (Double) => 
val x9 = x8+1.0
x9
}
val x10 = x7(1.0)
x4 = {x5: (Double) => 
val x6 = x5 == 0
val x14 = if (x6) {
x10
} else {
val x11 = x5-1.0
val x12 = x4(x11)
val x13 = x7(x12)
x13
}
x14
}
val x15 = x4(1.0)
x1 = {x2: (Double) => 
val x3 = x2 == 0
val x19 = if (x3) {
x15
} else {
val x16 = x2-1.0
val x17 = x1(x16)
val x18 = x4(x17)
x18
}
x19
}
val x20 = x1(x0)
x20
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
