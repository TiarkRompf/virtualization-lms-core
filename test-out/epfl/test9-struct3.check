TTP(List(Sym(4)),SimpleFatLoop(Const(100),Sym(1),List(ArrayElem(Sym(1)))))
TTP(List(Sym(2)),ThinDef(Minus(Const(0.0),Sym(1))))
TTP(List(Sym(5)),SimpleFatLoop(Const(100),Sym(1),List(ArrayElem(Sym(2)))))
TTP(List(Sym(9)),ThinDef(ArrayIndex(Sym(5),Sym(7))))
TTP(List(Sym(11)),ThinDef(Minus(Const(0.0),Sym(9))))
TTP(List(Sym(13)),SimpleFatLoop(Const(100),Sym(7),List(ArrayElem(Sym(11)))))
TTP(List(Sym(14)),ThinDef(SimpleStruct(List(Array, Complex),Map(re -> Sym(4), im -> Sym(13)))))
TTP(List(Sym(15)),ThinDef(Reflect(Print(Sym(14)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())))
TTP(List(Sym(16)),ThinDef(Reify(Sym(15),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(15)))))
wtableneg: List()
partitions: List(TTP(List(Sym(4), Sym(5), Sym(13)),SimpleFatLoop(Const(100),Sym(1),List(ArrayElem(Sym(1)), ArrayElem(Sym(2)), ArrayElem(Sym(11))))))
considering TTP(List(Sym(9)),ThinDef(ArrayIndex(Sym(5),Sym(7))))
replace TTP(List(Sym(9)),ThinDef(ArrayIndex(Sym(5),Sym(7)))) at 1 within TTP(List(Sym(4), Sym(5), Sym(13)),SimpleFatLoop(Const(100),Sym(1),List(ArrayElem(Sym(1)), ArrayElem(Sym(2)), ArrayElem(Sym(11)))))
need to transform rhs of fat loop: List(Sym(4)), List(ArrayElem(Sym(1)))
skipping mirror operation Sym(4)=SimpleLoop(Const(100),Sym(1),ArrayElem(Sym(1))) syms Sym(1) subst Sym(7) -> Sym(1),Sym(9) -> Sym(2),Sym(1) -> Sym(1)
came up with: List(Sym(4)), List(ArrayElem(Sym(1))) with subst Sym(7) -> Sym(1),Sym(9) -> Sym(2),Sym(1) -> Sym(1)
skipping mirror operation Sym(2)=Minus(Const(0.0),Sym(1)) syms Sym(1) subst Sym(7) -> Sym(1),Sym(9) -> Sym(2),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(5)), List(ArrayElem(Sym(2)))
skipping mirror operation Sym(5)=SimpleLoop(Const(100),Sym(1),ArrayElem(Sym(2))) syms Sym(2) subst Sym(7) -> Sym(1),Sym(9) -> Sym(2),Sym(1) -> Sym(1)
came up with: List(Sym(5)), List(ArrayElem(Sym(2))) with subst Sym(7) -> Sym(1),Sym(9) -> Sym(2),Sym(1) -> Sym(1)
warning: mirroring of Sym(11)=Minus(Const(0.0),Sym(9)) type Double returned Sym(1) type Int (not a subtype)
--> replace Sym(11)=Minus(Const(0.0),Sym(9)) by Sym(1)
need to transform rhs of fat loop: List(Sym(13)), List(ArrayElem(Sym(11)))
--> replace Sym(13)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(11))) by Sym(4)=SimpleLoop(Const(100),Sym(1),ArrayElem(Sym(1)))
lhs changed! will add to innerScope: 
came up with: List(Sym(4)), List(ArrayElem(Sym(1))) with subst Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(9) -> Sym(2),Sym(1) -> Sym(1)
--> replace Sym(14)=SimpleStruct(List(Array, Complex),Map(re -> Sym(4), im -> Sym(13))) by Sym(17)=SimpleStruct(List(Array, Complex),Map(re -> Sym(4), im -> Sym(4)))
--> replace Sym(15)=Reflect(Print(Sym(14)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) by Sym(18)=Reflect(Print(Sym(17)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())
--> replace Sym(16)=Reify(Sym(15),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(15))) by Sym(19)=Reify(Sym(18),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(18)))
need to transform rhs of fat loop: List(Sym(4)), List(ArrayElem(Sym(1)))
skipping mirror operation Sym(4)=SimpleLoop(Const(100),Sym(1),ArrayElem(Sym(1))) syms Sym(1) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
came up with: List(Sym(4)), List(ArrayElem(Sym(1))) with subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
skipping mirror operation Sym(2)=Minus(Const(0.0),Sym(1)) syms Sym(1) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(5)), List(ArrayElem(Sym(2)))
skipping mirror operation Sym(5)=SimpleLoop(Const(100),Sym(1),ArrayElem(Sym(2))) syms Sym(2) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
came up with: List(Sym(5)), List(ArrayElem(Sym(2))) with subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
skipping mirror operation Sym(17)=SimpleStruct(List(Array, Complex),Map(re -> Sym(4), im -> Sym(4))) syms Sym(4),Sym(4) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
skipping mirror operation Sym(18)=Reflect(Print(Sym(17)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms Sym(17) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
skipping mirror operation Sym(19)=Reify(Sym(18),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(18))) syms Sym(18),Sym(18) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(4)), List(ArrayElem(Sym(1)))
skipping mirror operation Sym(4)=SimpleLoop(Const(100),Sym(1),ArrayElem(Sym(1))) syms Sym(1) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
came up with: List(Sym(4)), List(ArrayElem(Sym(1))) with subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
skipping mirror operation Sym(2)=Minus(Const(0.0),Sym(1)) syms Sym(1) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(5)), List(ArrayElem(Sym(2)))
skipping mirror operation Sym(5)=SimpleLoop(Const(100),Sym(1),ArrayElem(Sym(2))) syms Sym(2) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
came up with: List(Sym(5)), List(ArrayElem(Sym(2))) with subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
skipping mirror operation Sym(17)=SimpleStruct(List(Array, Complex),Map(re -> Sym(4), im -> Sym(4))) syms Sym(4),Sym(4) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
skipping mirror operation Sym(18)=Reflect(Print(Sym(17)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms Sym(17) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
skipping mirror operation Sym(19)=Reify(Sym(18),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(18))) syms Sym(18),Sym(18) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(4)), List(ArrayElem(Sym(1)))
skipping mirror operation Sym(4)=SimpleLoop(Const(100),Sym(1),ArrayElem(Sym(1))) syms Sym(1) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
came up with: List(Sym(4)), List(ArrayElem(Sym(1))) with subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
skipping mirror operation Sym(17)=SimpleStruct(List(Array, Complex),Map(re -> Sym(4), im -> Sym(4))) syms Sym(4),Sym(4) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
skipping mirror operation Sym(18)=Reflect(Print(Sym(17)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms Sym(17) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
skipping mirror operation Sym(19)=Reify(Sym(18),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(18))) syms Sym(18),Sym(18) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(4), Sym(5), Sym(13)), List(ArrayElem(Sym(1)), ArrayElem(Sym(2)), ArrayElem(Sym(11)))
skipping mirror operation Sym(4)=SimpleLoop(Const(100),Sym(1),ArrayElem(Sym(1))) syms Sym(1) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
skipping mirror operation Sym(5)=SimpleLoop(Const(100),Sym(1),ArrayElem(Sym(2))) syms Sym(2) subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
lhs changed! will add to innerScope: 
came up with: List(Sym(4), Sym(5)), List(ArrayElem(Sym(1)), ArrayElem(Sym(2))) with subst Sym(16) -> Sym(19),Sym(11) -> Sym(1),Sym(13) -> Sym(4),Sym(7) -> Sym(1),Sym(14) -> Sym(17),Sym(9) -> Sym(2),Sym(15) -> Sym(18),Sym(1) -> Sym(1)
try once more ...
wtableneg: List()
partitions: List(TTP(List(Sym(4), Sym(5)),SimpleFatLoop(Const(100),Sym(1),List(ArrayElem(Sym(1)), ArrayElem(Sym(2))))))
no changes, we're done
super.focusExactScopeFat with result changed from List(Sym(16)) to List(Sym(19))
/*****************************************
  Emitting Generated Code                  
*******************************************/
class Test extends ((Int)=>(Any)) {
def apply(x0:Int): Any = {
var x4 = new Array[](100)
for (x1 <- 0 until 100) {
x4(x1) = x1
}
val x17 = Map("re"->x4,"im"->x4) //Array Complex
val x18 = println(x17)
val x15 = x18
x15
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
