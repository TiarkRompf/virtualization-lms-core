/*****************************************
  Emitting Generated Code                  
*******************************************/
class Test extends ((Int)=>(Unit)) {
def apply(x0:Int): Unit = {
val x1 = 1 == 1
if (x1) {
println("found:")
println(1)
println(1)

} else {
()
}
val x7 = 1 == 2
if (x7) {
println("found:")
println(1)
println(2)

} else {
()
}
val x13 = 1 == 3
if (x13) {
println("found:")
println(1)
println(3)

} else {
()
}
val x19 = 2 == 1
if (x19) {
println("found:")
println(2)
println(1)

} else {
()
}
val x25 = 2 == 2
if (x25) {
println("found:")
println(2)
println(2)

} else {
()
}
val x31 = 2 == 3
if (x31) {
println("found:")
println(2)
println(3)

} else {
()
}
val x37 = x0 == 1
if (x37) {
println("found:")
println(x0)
println(1)

} else {
()
}
val x43 = x0 == 2
if (x43) {
println("found:")
println(x0)
println(2)

} else {
()
}
val x49 = x0 == 3
if (x49) {
println("found:")
println(x0)
println(3)

} else {
()
}
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
