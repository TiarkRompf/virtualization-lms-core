/*****************************************
  Emitting Generated Code                  
*******************************************/
class Test extends ((Unit)=>(scala.Function1[Boolean, scala.Function1[Double, Double]])) {
def apply(x0:Unit): scala.Function1[Boolean, scala.Function1[Double, Double]] = {
val x7 = if (true) {
val x3 = {x1: (Double) => 
val x2 = 2.0*x1
x2: Double
}
x3
} else {
val x6 = {x4: (Double) => 
val x5 = 4.0*x4
x5: Double
}
x6
}
val x19 = if (false) {
val x15 = {x13: (Double) => 
val x14 = x13+1.0
x14: Double
}
x15
} else {
val x18 = {x16: (Double) => 
val x17 = x16+2.0
x17: Double
}
x18
}
val x23 = {x8: (Boolean) => 
println("yo")
val x21 = if (x8) {
println("then")
x7
} else {
println("else")
x19
}
x21: scala.Function1[Double, Double]
}
x23
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
