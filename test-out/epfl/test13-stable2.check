call with arg 9
(re) compiling
read value RCell(stable) sym Sym(3)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class staged11(px3:scala.virtualization.lms.epfl.test13.RCell[Int],px5:Int,px9:scala.virtualization.lms.epfl.test13.RCell[scala.Function1[Int, Int]],px11:scala.Function1[scala.collection.immutable.List[Any], scala.Function1[Unit, Int]]) extends ((Int)=>(Int)) {
def apply(x0:Int): Int = {
val x3 = px3 // static data: RCell(stable)
val x4 = x3.value
val x5 = px5 // static data: 1
val x6 = x4 == x5
val x15 = if (x6) {
val x1 = x0 + 1
val x2 = x0 * 2
val x7 = x1 + x2
val x8 = 1 * x7
x8
} else {
val x9 = px9 // static data: RCell(code)
x9.set(null)
val x1 = x0 + 1
val x2 = x0 * 2
val x11 = px11 // static data: <function1>
val x12 = x11.apply(List(x4, x1, x2))// compile dynamic: fv = List(Sym(4), Sym(1), Sym(2))
val x13 = x12.apply(())
x13
}
x15
}
}
/*****************************************
  End of Generated Code                  
*******************************************/

28
call with arg 9
/*****************************************
  Emitting Generated Code                  
*******************************************/
class staged12(px1:Int,px2:Int) extends ((Unit)=>(Int)) {
def apply(x5:Unit): Int = {
val x1 = px1 // static data: 10
val x2 = px2 // static data: 18
val x6 = x1 + x2
val x7 = 5 * x6
x7
}
}
/*****************************************
  End of Generated Code                  
*******************************************/

140
call with arg 9
(re) compiling
read value RCell(stable) sym Sym(11)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class staged13(px11:scala.virtualization.lms.epfl.test13.RCell[Int],px13:Int,px17:scala.virtualization.lms.epfl.test13.RCell[scala.Function1[Int, Int]],px19:scala.Function1[scala.collection.immutable.List[Any], scala.Function1[Unit, Int]]) extends ((Int)=>(Int)) {
def apply(x8:Int): Int = {
val x11 = px11 // static data: RCell(stable)
val x12 = x11.value
val x13 = px13 // static data: 2
val x14 = x12 == x13
val x23 = if (x14) {
val x9 = x8 + 1
val x10 = x8 * 2
val x15 = x9 + x10
val x16 = 2 * x15
x16
} else {
val x17 = px17 // static data: RCell(code)
x17.set(null)
val x9 = x8 + 1
val x10 = x8 * 2
val x19 = px19 // static data: <function1>
val x20 = x19.apply(List(x12, x9, x10))// compile dynamic: fv = List(Sym(12), Sym(9), Sym(10))
val x21 = x20.apply(())
x21
}
x23
}
}
/*****************************************
  End of Generated Code                  
*******************************************/

56
