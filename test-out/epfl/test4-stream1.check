/*****************************************
  Emitting Generated Code                  
*******************************************/
class Match extends ((Unit)=>(scala.virtualization.lms.epfl.test4.Automaton[Char, scala.collection.immutable.List[Any]])) {
def apply(x0:Unit): scala.virtualization.lms.epfl.test4.Automaton[Char, scala.collection.immutable.List[Any]] = {
var x1: scala.Function1[Double, Double] = null
var x33: scala.Function1[Double, Double] = null
var x19: scala.Function1[scala.Tuple2[scala.Tuple2[Double, Double], scala.collection.immutable.List[scala.Tuple2[Double, Double]]], scala.Tuple2[scala.Tuple2[Double, Double], scala.collection.immutable.List[scala.Tuple2[Double, Double]]]] = null
var x12: scala.Function1[scala.collection.immutable.List[scala.Tuple2[Double, Double]], scala.virtualization.lms.epfl.test4.Automaton[Char, scala.collection.immutable.List[Any]]] = null
x1 = {x2: (Double) => 
val x4 = x2%2 == 0
val x5 = if (x4) {
false
} else {
val x3 = x2 < 8.0
x3
}
val x8 = if (x5) {
val x6 = x2+1.0
val x7 = x1(x6)
x7
} else {
x2
}
x8
}
val x9 = x1(0.0)
val x10 = (0.0,x9)
x33 = {x34: (Double) => 
val x36 = x34%2 == 0
val x37 = if (x36) {
false
} else {
val x35 = x34 < 8.0
x35
}
val x40 = if (x37) {
val x38 = x34+1.0
val x39 = x33(x38)
x39
} else {
x34
}
x40
}
x19 = {x20: (scala.Tuple2[scala.Tuple2[Double, Double], scala.collection.immutable.List[scala.Tuple2[Double, Double]]]) => 
val x21 = x20._1
val x23 = x21._1
val x25 = x23 < 8.0
val x29 = if (x25) {
val x24 = x21._2
val x26 = x24 < 8.0
val x28 = if (x26) {
val x27 = x24%2 == 0
x27
} else {
false
}
x28
} else {
false
}
val x30 = if (x29) {
true
} else {
false
}
val x48 = if (x30) {
val x31 = x23+1.0
val x24 = x21._2
val x32 = x24+1.0
val x41 = x33(x32)
val x42 = (x31,x41)
val x22 = x20._2
val x43 = (x23,x24)
val x44 = List(x43)
val x45 = x22 ::: x44
val x46 = (x42,x45)
val x47 = x19(x46)
x47
} else {
x20
}
x48
}
x12 = {x13: (scala.collection.immutable.List[scala.Tuple2[Double, Double]]) => 
val x14 = List(x13)
val x15 = {x16: (Char) => 
val x17 = x13 // x16
val x18 = (x10,x17)
val x49 = x19(x18)
val x51 = x49._2
val x52 = x12(x51)
x52
}
val x53 = scala.virtualization.lms.epfl.test4.Automaton(x14,x15)
x53
}
val x11 = List()
val x54 = x12(x11)
x54
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
idx:   0
out:   List(List())
char:  X
idx:   1
out:   List(List((0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0)))
char:  A
idx:   2
out:   List(List((0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0)))
char:  B
idx:   3
out:   List(List((0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0)))
char:  Z
idx:   4
out:   List(List((0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0)))
char:  A
idx:   5
out:   List(List((0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0)))
char:  A
idx:   6
out:   List(List((0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0)))
char:  B
idx:   7
out:   List(List((0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0)))
char:  W
idx:   8
out:   List(List((0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0)))
char:  A
idx:   9
out:   List(List((0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0)))
char:  A
idx:   10
out:   List(List((0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0)))
char:  A
idx:   11
out:   List(List((0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0)))
char:  A
idx:   12
out:   List(List((0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0)))
char:  B
idx:   13
out:   List(List((0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0)))
char:  Q
idx:   14
out:   List(List((0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0), (0.0,0.0), (1.0,2.0), (2.0,4.0), (3.0,6.0)))
