----- Sym(26) / Set((re,Sym(27)), (im,Sym(28)))
TTP(List(Sym(8)),ThinDef(Minus(Const(0.0),Sym(7))))
TTP(List(Sym(10)),SimpleFatLoop(Const(100),Sym(7),List(ArrayElem(Sym(8)))))
TTP(List(Sym(13)),ThinDef(Reflect(NewVar(Sym(10)),Summary(false,false,false,false,true,List(),List(),List(),List()),List())))
TTP(List(Sym(11)),SimpleFatLoop(Const(100),Sym(7),List(ArrayElem(Sym(7)))))
TTP(List(Sym(14)),ThinDef(Reflect(NewVar(Sym(11)),Summary(false,false,false,false,true,List(),List(),List(),List()),List())))
TTP(List(Sym(16)),ThinDef(OrderingGT(Sym(0),Const(7))))
TTP(List(Sym(17)),ThinDef(Reflect(Print(Const(foobar true)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())))
TTP(List(Sym(24)),ThinDef(Reify(Const(()),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(17)))))
TTP(List(Sym(19)),ThinDef(Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())))
TTP(List(Sym(20)),ThinDef(Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13)))))
TTP(List(Sym(21)),ThinDef(Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14)))))
TTP(List(Sym(25)),ThinDef(Reify(Const(()),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(),List()),List(Sym(19), Sym(20), Sym(21)))))
TTP(List(Sym(26), Sym(27), Sym(28)),SimpleFatIfThenElse(Sym(16),List(Sym(24), Sym(4), Sym(5)),List(Sym(25), Sym(20), Sym(21))))
TTP(List(Sym(4)),SimpleFatLoop(Const(100),Sym(1),List(ArrayElem(Sym(1)))))
TTP(List(Sym(30)),ThinDef(Reflect(Assign(Variable(Sym(13)),Sym(4)),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(Sym(13)),List(Sym(13))),List(Sym(13), Sym(26)))))
TTP(List(Sym(2)),ThinDef(Minus(Const(0.0),Sym(1))))
TTP(List(Sym(5)),SimpleFatLoop(Const(100),Sym(1),List(ArrayElem(Sym(2)))))
TTP(List(Sym(31)),ThinDef(Reflect(Assign(Variable(Sym(14)),Sym(5)),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(Sym(14)),List(Sym(14))),List(Sym(14), Sym(26)))))
TTP(List(Sym(32)),ThinDef(Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13), Sym(30)))))
TTP(List(Sym(33)),ThinDef(Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14), Sym(31)))))
TTP(List(Sym(34)),ThinDef(SimpleStruct(List(Array, Complex),Map(re -> Sym(32), im -> Sym(33)))))
TTP(List(Sym(35)),ThinDef(Reflect(Print(Sym(34)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(26)))))
TTP(List(Sym(29)),ThinDef(SimpleStruct(List(Array, Complex),Map(re -> Sym(27), im -> Sym(28)))))
TTP(List(Sym(36)),ThinDef(Reflect(Print(Sym(29)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(26), Sym(35)))))
TTP(List(Sym(37)),ThinDef(Reify(Sym(36),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(13), Sym(14), Sym(26), Sym(30), Sym(31), Sym(32), Sym(33), Sym(35), Sym(36)))))
wtableneg: List()
partitions: List(TTP(List(Sym(10), Sym(11), Sym(4), Sym(5)),SimpleFatLoop(Const(100),Sym(7),List(ArrayElem(Sym(8)), ArrayElem(Sym(7)), ArrayElem(Sym(1)), ArrayElem(Sym(2))))))
skipping mirror operation Sym(8)=Minus(Const(0.0),Sym(7)) syms Sym(7) subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(10)), List(ArrayElem(Sym(8)))
skipping mirror operation Sym(10)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(8))) syms Sym(8) subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
came up with: List(Sym(10)), List(ArrayElem(Sym(8))) with subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
skipping mirror operation Sym(13)=Reflect(NewVar(Sym(10)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(10) subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(11)), List(ArrayElem(Sym(7)))
skipping mirror operation Sym(11)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(7))) syms Sym(7) subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
came up with: List(Sym(11)), List(ArrayElem(Sym(7))) with subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
skipping mirror operation Sym(14)=Reflect(NewVar(Sym(11)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(11) subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
skipping mirror operation Sym(16)=OrderingGT(Sym(0),Const(7)) syms Sym(0) subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
skipping mirror operation Sym(17)=Reflect(Print(Const(foobar true)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
skipping mirror operation Sym(24)=Reify(Const(()),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(17))) syms Sym(17) subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
skipping mirror operation Sym(20)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13))) syms Sym(13),Sym(13) subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
skipping mirror operation Sym(21)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14))) syms Sym(14),Sym(14) subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
skipping mirror operation Sym(19)=Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
skipping mirror operation Sym(25)=Reify(Const(()),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(),List()),List(Sym(19), Sym(20), Sym(21))) syms Sym(19),Sym(20),Sym(21) subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(4)), List(ArrayElem(Sym(1)))
--> replace Sym(4)=SimpleLoop(Const(100),Sym(1),ArrayElem(Sym(1))) by Sym(11)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(7)))
lhs changed! will add to innerScope: 
came up with: List(Sym(11)), List(ArrayElem(Sym(7))) with subst Sym(7) -> Sym(7),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
--> replace Sym(2)=Minus(Const(0.0),Sym(1)) by Sym(8)=Minus(Const(0.0),Sym(7))
need to transform rhs of fat loop: List(Sym(5)), List(ArrayElem(Sym(2)))
--> replace Sym(5)=SimpleLoop(Const(100),Sym(1),ArrayElem(Sym(2))) by Sym(10)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(8)))
lhs changed! will add to innerScope: 
came up with: List(Sym(10)), List(ArrayElem(Sym(8))) with subst Sym(2) -> Sym(8),Sym(5) -> Sym(10),Sym(7) -> Sym(7),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
need to transform rhs of fat if/then/else: List(Sym(26), Sym(27), Sym(28)), if Sym(16) then List(Sym(24), Sym(4), Sym(5)) else List(Sym(25), Sym(20), Sym(21))
skipping mirror operation Sym(26)=Reflect(IfThenElse(Sym(16),Sym(24),Sym(25)),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14))) syms Sym(16),Sym(24),Sym(25),Sym(13),Sym(14) subst Sym(2) -> Sym(8),Sym(5) -> Sym(10),Sym(7) -> Sym(7),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
--> replace Sym(27)=Phi(Sym(16),Sym(24),Sym(4),Sym(25),Sym(20)) by Sym(38)=Phi(Sym(16),Sym(24),Sym(11),Sym(25),Sym(20))
--> replace Sym(28)=Phi(Sym(16),Sym(24),Sym(5),Sym(25),Sym(21)) by Sym(39)=Phi(Sym(16),Sym(24),Sym(10),Sym(25),Sym(21))
lhs changed! will add to innerScope: TP(Sym(38),Phi(Sym(16),Sym(24),Sym(11),Sym(25),Sym(20))),TP(Sym(39),Phi(Sym(16),Sym(24),Sym(10),Sym(25),Sym(21)))
-- fatten effectful if/then/else TP(Sym(26),Reflect(IfThenElse(Sym(16),Sym(24),Sym(25)),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14))))
-- fatten effectful if/then/else TP(Sym(26),Reflect(IfThenElse(Sym(16),Sym(24),Sym(25)),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14))))
came up with: List(Sym(26), Sym(38), Sym(39)), if Sym(16) then List(Sym(24), Sym(11), Sym(10)) else List(Sym(25), Sym(20), Sym(21)) with subst Sym(2) -> Sym(8),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(7) -> Sym(7),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
--> replace Sym(30)=Reflect(Assign(Variable(Sym(13)),Sym(4)),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(Sym(13)),List(Sym(13))),List(Sym(13), Sym(26))) by Sym(40)=Reflect(Assign(Variable(Sym(13)),Sym(11)),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(Sym(13)),List(Sym(13))),List(Sym(13), Sym(26)))
--> replace Sym(31)=Reflect(Assign(Variable(Sym(14)),Sym(5)),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(Sym(14)),List(Sym(14))),List(Sym(14), Sym(26))) by Sym(41)=Reflect(Assign(Variable(Sym(14)),Sym(10)),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(Sym(14)),List(Sym(14))),List(Sym(14), Sym(26)))
--> replace Sym(32)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13), Sym(30))) by Sym(42)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13), Sym(40)))
--> replace Sym(33)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14), Sym(31))) by Sym(43)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14), Sym(41)))
--> replace Sym(34)=SimpleStruct(List(Array, Complex),Map(re -> Sym(32), im -> Sym(33))) by Sym(44)=SimpleStruct(List(Array, Complex),Map(re -> Sym(42), im -> Sym(43)))
--> replace Sym(35)=Reflect(Print(Sym(34)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(26))) by Sym(45)=Reflect(Print(Sym(44)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(26)))
--> replace Sym(29)=SimpleStruct(List(Array, Complex),Map(re -> Sym(27), im -> Sym(28))) by Sym(46)=SimpleStruct(List(Array, Complex),Map(re -> Sym(38), im -> Sym(39)))
--> replace Sym(36)=Reflect(Print(Sym(29)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(26), Sym(35))) by Sym(47)=Reflect(Print(Sym(46)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(26), Sym(45)))
--> replace Sym(37)=Reify(Sym(36),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(13), Sym(14), Sym(26), Sym(30), Sym(31), Sym(32), Sym(33), Sym(35), Sym(36))) by Sym(48)=Reify(Sym(47),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(13), Sym(14), Sym(26), Sym(40), Sym(41), Sym(42), Sym(43), Sym(45), Sym(47)))
skipping mirror operation Sym(8)=Minus(Const(0.0),Sym(7)) syms Sym(7) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(10)), List(ArrayElem(Sym(8)))
skipping mirror operation Sym(10)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(8))) syms Sym(8) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
came up with: List(Sym(10)), List(ArrayElem(Sym(8))) with subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(13)=Reflect(NewVar(Sym(10)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(10) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(11)), List(ArrayElem(Sym(7)))
skipping mirror operation Sym(11)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(7))) syms Sym(7) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
came up with: List(Sym(11)), List(ArrayElem(Sym(7))) with subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(14)=Reflect(NewVar(Sym(11)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(11) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(16)=OrderingGT(Sym(0),Const(7)) syms Sym(0) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(17)=Reflect(Print(Const(foobar true)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(24)=Reify(Const(()),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(17))) syms Sym(17) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(20)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13))) syms Sym(13),Sym(13) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(21)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14))) syms Sym(14),Sym(14) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(19)=Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(25)=Reify(Const(()),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(),List()),List(Sym(19), Sym(20), Sym(21))) syms Sym(19),Sym(20),Sym(21) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
need to transform rhs of fat if/then/else: List(Sym(26), Sym(38), Sym(39)), if Sym(16) then List(Sym(24), Sym(11), Sym(10)) else List(Sym(25), Sym(20), Sym(21))
skipping mirror operation Sym(26)=Reflect(IfThenElse(Sym(16),Sym(24),Sym(25)),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14))) syms Sym(16),Sym(24),Sym(25),Sym(13),Sym(14) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(38)=Phi(Sym(16),Sym(24),Sym(11),Sym(25),Sym(20)) syms Sym(16),Sym(24),Sym(11),Sym(25),Sym(20) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(39)=Phi(Sym(16),Sym(24),Sym(10),Sym(25),Sym(21)) syms Sym(16),Sym(24),Sym(10),Sym(25),Sym(21) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
came up with: List(Sym(26), Sym(38), Sym(39)), if Sym(16) then List(Sym(24), Sym(11), Sym(10)) else List(Sym(25), Sym(20), Sym(21)) with subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(40)=Reflect(Assign(Variable(Sym(13)),Sym(11)),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(Sym(13)),List(Sym(13))),List(Sym(13), Sym(26))) syms Sym(13),Sym(11),Sym(13),Sym(26) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(41)=Reflect(Assign(Variable(Sym(14)),Sym(10)),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(Sym(14)),List(Sym(14))),List(Sym(14), Sym(26))) syms Sym(14),Sym(10),Sym(14),Sym(26) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(42)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13), Sym(40))) syms Sym(13),Sym(13),Sym(40) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(43)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14), Sym(41))) syms Sym(14),Sym(14),Sym(41) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(44)=SimpleStruct(List(Array, Complex),Map(re -> Sym(42), im -> Sym(43))) syms Sym(42),Sym(43) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(45)=Reflect(Print(Sym(44)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(26))) syms Sym(44),Sym(26) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(46)=SimpleStruct(List(Array, Complex),Map(re -> Sym(38), im -> Sym(39))) syms Sym(38),Sym(39) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(47)=Reflect(Print(Sym(46)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(26), Sym(45))) syms Sym(46),Sym(26),Sym(45) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(48)=Reify(Sym(47),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(13), Sym(14), Sym(26), Sym(40), Sym(41), Sym(42), Sym(43), Sym(45), Sym(47))) syms Sym(47),Sym(13),Sym(14),Sym(26),Sym(40),Sym(41),Sym(42),Sym(43),Sym(45),Sym(47) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(8)=Minus(Const(0.0),Sym(7)) syms Sym(7) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(10)), List(ArrayElem(Sym(8)))
skipping mirror operation Sym(10)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(8))) syms Sym(8) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
came up with: List(Sym(10)), List(ArrayElem(Sym(8))) with subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(13)=Reflect(NewVar(Sym(10)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(10) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(11)), List(ArrayElem(Sym(7)))
skipping mirror operation Sym(11)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(7))) syms Sym(7) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
came up with: List(Sym(11)), List(ArrayElem(Sym(7))) with subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(14)=Reflect(NewVar(Sym(11)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(11) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(16)=OrderingGT(Sym(0),Const(7)) syms Sym(0) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(17)=Reflect(Print(Const(foobar true)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(24)=Reify(Const(()),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(17))) syms Sym(17) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(20)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13))) syms Sym(13),Sym(13) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(21)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14))) syms Sym(14),Sym(14) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(19)=Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(25)=Reify(Const(()),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(),List()),List(Sym(19), Sym(20), Sym(21))) syms Sym(19),Sym(20),Sym(21) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
need to transform rhs of fat if/then/else: List(Sym(26), Sym(38), Sym(39)), if Sym(16) then List(Sym(24), Sym(11), Sym(10)) else List(Sym(25), Sym(20), Sym(21))
skipping mirror operation Sym(26)=Reflect(IfThenElse(Sym(16),Sym(24),Sym(25)),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14))) syms Sym(16),Sym(24),Sym(25),Sym(13),Sym(14) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(38)=Phi(Sym(16),Sym(24),Sym(11),Sym(25),Sym(20)) syms Sym(16),Sym(24),Sym(11),Sym(25),Sym(20) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(39)=Phi(Sym(16),Sym(24),Sym(10),Sym(25),Sym(21)) syms Sym(16),Sym(24),Sym(10),Sym(25),Sym(21) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
came up with: List(Sym(26), Sym(38), Sym(39)), if Sym(16) then List(Sym(24), Sym(11), Sym(10)) else List(Sym(25), Sym(20), Sym(21)) with subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(40)=Reflect(Assign(Variable(Sym(13)),Sym(11)),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(Sym(13)),List(Sym(13))),List(Sym(13), Sym(26))) syms Sym(13),Sym(11),Sym(13),Sym(26) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(41)=Reflect(Assign(Variable(Sym(14)),Sym(10)),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(Sym(14)),List(Sym(14))),List(Sym(14), Sym(26))) syms Sym(14),Sym(10),Sym(14),Sym(26) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(42)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13), Sym(40))) syms Sym(13),Sym(13),Sym(40) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(43)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14), Sym(41))) syms Sym(14),Sym(14),Sym(41) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(44)=SimpleStruct(List(Array, Complex),Map(re -> Sym(42), im -> Sym(43))) syms Sym(42),Sym(43) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(45)=Reflect(Print(Sym(44)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(26))) syms Sym(44),Sym(26) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(46)=SimpleStruct(List(Array, Complex),Map(re -> Sym(38), im -> Sym(39))) syms Sym(38),Sym(39) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(47)=Reflect(Print(Sym(46)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(26), Sym(45))) syms Sym(46),Sym(26),Sym(45) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(48)=Reify(Sym(47),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(13), Sym(14), Sym(26), Sym(40), Sym(41), Sym(42), Sym(43), Sym(45), Sym(47))) syms Sym(47),Sym(13),Sym(14),Sym(26),Sym(40),Sym(41),Sym(42),Sym(43),Sym(45),Sym(47) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(8)=Minus(Const(0.0),Sym(7)) syms Sym(7) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(10)), List(ArrayElem(Sym(8)))
skipping mirror operation Sym(10)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(8))) syms Sym(8) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
came up with: List(Sym(10)), List(ArrayElem(Sym(8))) with subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(13)=Reflect(NewVar(Sym(10)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(10) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(11)), List(ArrayElem(Sym(7)))
skipping mirror operation Sym(11)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(7))) syms Sym(7) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
came up with: List(Sym(11)), List(ArrayElem(Sym(7))) with subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(14)=Reflect(NewVar(Sym(11)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(11) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(16)=OrderingGT(Sym(0),Const(7)) syms Sym(0) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(17)=Reflect(Print(Const(foobar true)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(24)=Reify(Const(()),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(17))) syms Sym(17) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(20)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13))) syms Sym(13),Sym(13) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(21)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14))) syms Sym(14),Sym(14) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(19)=Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(25)=Reify(Const(()),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(),List()),List(Sym(19), Sym(20), Sym(21))) syms Sym(19),Sym(20),Sym(21) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
need to transform rhs of fat if/then/else: List(Sym(26), Sym(38), Sym(39)), if Sym(16) then List(Sym(24), Sym(11), Sym(10)) else List(Sym(25), Sym(20), Sym(21))
skipping mirror operation Sym(26)=Reflect(IfThenElse(Sym(16),Sym(24),Sym(25)),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14))) syms Sym(16),Sym(24),Sym(25),Sym(13),Sym(14) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(38)=Phi(Sym(16),Sym(24),Sym(11),Sym(25),Sym(20)) syms Sym(16),Sym(24),Sym(11),Sym(25),Sym(20) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(39)=Phi(Sym(16),Sym(24),Sym(10),Sym(25),Sym(21)) syms Sym(16),Sym(24),Sym(10),Sym(25),Sym(21) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
came up with: List(Sym(26), Sym(38), Sym(39)), if Sym(16) then List(Sym(24), Sym(11), Sym(10)) else List(Sym(25), Sym(20), Sym(21)) with subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(40)=Reflect(Assign(Variable(Sym(13)),Sym(11)),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(Sym(13)),List(Sym(13))),List(Sym(13), Sym(26))) syms Sym(13),Sym(11),Sym(13),Sym(26) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(41)=Reflect(Assign(Variable(Sym(14)),Sym(10)),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(Sym(14)),List(Sym(14))),List(Sym(14), Sym(26))) syms Sym(14),Sym(10),Sym(14),Sym(26) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(42)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13), Sym(40))) syms Sym(13),Sym(13),Sym(40) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(43)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14), Sym(41))) syms Sym(14),Sym(14),Sym(41) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(44)=SimpleStruct(List(Array, Complex),Map(re -> Sym(42), im -> Sym(43))) syms Sym(42),Sym(43) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(45)=Reflect(Print(Sym(44)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(26))) syms Sym(44),Sym(26) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(46)=SimpleStruct(List(Array, Complex),Map(re -> Sym(38), im -> Sym(39))) syms Sym(38),Sym(39) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(47)=Reflect(Print(Sym(46)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(26), Sym(45))) syms Sym(46),Sym(26),Sym(45) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(48)=Reify(Sym(47),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(13), Sym(14), Sym(26), Sym(40), Sym(41), Sym(42), Sym(43), Sym(45), Sym(47))) syms Sym(47),Sym(13),Sym(14),Sym(26),Sym(40),Sym(41),Sym(42),Sym(43),Sym(45),Sym(47) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(10), Sym(11), Sym(4), Sym(5)), List(ArrayElem(Sym(8)), ArrayElem(Sym(7)), ArrayElem(Sym(1)), ArrayElem(Sym(2)))
skipping mirror operation Sym(10)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(8))) syms Sym(8) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
skipping mirror operation Sym(11)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(7))) syms Sym(7) subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
lhs changed! will add to innerScope: 
came up with: List(Sym(10), Sym(11)), List(ArrayElem(Sym(8)), ArrayElem(Sym(7))) with subst Sym(34) -> Sym(44),Sym(2) -> Sym(8),Sym(36) -> Sym(47),Sym(29) -> Sym(46),Sym(5) -> Sym(10),Sym(27) -> Sym(38),Sym(33) -> Sym(43),Sym(7) -> Sym(7),Sym(32) -> Sym(42),Sym(35) -> Sym(45),Sym(30) -> Sym(40),Sym(31) -> Sym(41),Sym(28) -> Sym(39),Sym(4) -> Sym(11),Sym(37) -> Sym(48),Sym(1) -> Sym(7)
try once more ...
wtableneg: List()
partitions: List(TTP(List(Sym(10), Sym(11)),SimpleFatLoop(Const(100),Sym(7),List(ArrayElem(Sym(8)), ArrayElem(Sym(7))))))
no changes, we're done
super.focusExactScopeFat with result changed from List(Sym(37)) to List(Sym(48))
TTP(List(Sym(8)),ThinDef(Minus(Const(0.0),Sym(7))))
TTP(List(Sym(17)),ThinDef(Reflect(Print(Const(foobar true)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())))
TTP(List(Sym(24)),ThinDef(Reify(Const(()),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(17)))))
TTP(List(Sym(20)),ThinDef(Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13)))))
TTP(List(Sym(21)),ThinDef(Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14)))))
TTP(List(Sym(19)),ThinDef(Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())))
TTP(List(Sym(25)),ThinDef(Reify(Const(()),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(),List()),List(Sym(19), Sym(20), Sym(21)))))
error: violated ordering of effects
  expected:
    TTP(List(Sym(19)),ThinDef(Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())))
    TTP(List(Sym(20)),ThinDef(Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13)))))
    TTP(List(Sym(21)),ThinDef(Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14)))))
  actual:
    TTP(List(Sym(20)),ThinDef(Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13)))))
    TTP(List(Sym(21)),ThinDef(Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14)))))
    TTP(List(Sym(19)),ThinDef(Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())))
  missing:
  note: there is nothing missing so the different order might in fact be ok (artifact of new effect handling? TODO)
error: violated ordering of effects
  expected:
    TTP(List(Sym(19)),ThinDef(Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())))
    TTP(List(Sym(20)),ThinDef(Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13)))))
    TTP(List(Sym(21)),ThinDef(Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14)))))
  actual:
    TTP(List(Sym(20)),ThinDef(Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13)))))
    TTP(List(Sym(21)),ThinDef(Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14)))))
    TTP(List(Sym(19)),ThinDef(Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())))
  missing:
  note: there is nothing missing so the different order might in fact be ok (artifact of new effect handling? TODO)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class Test extends ((Int)=>(Any)) {
def apply(x0:Int): Any = {
var x10 = new Array[](100)
var x11 = new Array[](100)
for (x7 <- 0 until 100) {
val x8 = 0.0-x7
x10(x7) = x8
x11(x7) = x7
}
var x13: Any = x10
var x14: Any = x11
val x16 = x0 > 7
// TODO: use vars instead of tuples to return multiple values
val (x26,x38,x39) = if (x16) {
val x17 = println("foobar true")
((),x11,x10)
} else {
val x20 = x13
val x21 = x14
val x19 = println("foobar false")
((),x20,x21)
}
x13 = x11
x14 = x10
val x42 = x13
val x43 = x14
val x44 = Map("re"->x42,"im"->x43) //Array Complex
val x45 = println(x44)
val x46 = Map("re"->x38,"im"->x39) //Array Complex
val x47 = println(x46)
val x36 = x47
x36
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
