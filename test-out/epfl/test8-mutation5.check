error: illegal sharing of mutable objects Sym(8)
at Sym(10)=Reflect(ArrayUpdate(Sym(5),Const(5),Sym(8)),Summary(false,false,false,false,false,List(Sym(5), Sym(8)),List(Sym(5), Sym(8)),List(Sym(5)),List(Sym(5))),List(Sym(5), Sym(8), Sym(9)))
promoting to effect: Sym(12)=Reflect(ArrayIndex(Sym(5),Const(5)),Summary(false,false,false,false,false,List(Sym(5)),List(Sym(5)),List(),List()),List(Sym(5), Sym(9), Sym(10)))
depends on  Sym(5)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class Test extends ((Int)=>(Unit)) {
def apply(x0:Int): Unit = {
val x2 = LoopArray(100) { x1 => 
0.0
}
val x4 = LoopArray(10) { x3 => 
x2
}
val x5 = x4.clone // mutable
val x7 = LoopArray(20) { x6 => 
0.0
}
val x8 = x7.clone // mutable
x5.update(4, x2)
x5.update(5, x8)
x8.update(50, 50.0)
val x12 = x5.apply(5)
val x13 = x12.apply(50)
println(x13)
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
