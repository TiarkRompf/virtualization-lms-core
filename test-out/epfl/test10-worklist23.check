### first
register replacement for Sym(1)
register replacement for Sym(2)
register replacement for Sym(5)
--- code ---
val x1 = VectorZeros(Const(100))
val x3 = x0 > 0
val x4 = if (x3) {
x1
} else {
val x2 = VectorZeros(Const(50))
x2
}
val x5 = VectorPlus(Sym(4),Sym(1))
val x6 = println(x5)

### next
install replacement for Sym(1)
install replacement for Sym(2)
install replacement for Sym(5)
register replacement for Sym(18)
register replacement for Sym(20)
register replacement for Sym(21)
--- code ---
val x3 = x0 > 0
val x9 = LoopArray(100) { x8 => 
0.0
}
var x15: Array[Double] = null
var x16: Int = 0
if (x3) {
x15 = x9
x16 = 100
} else {
val x12 = LoopArray(50) { x11 => 
0.0
}
x15 = x12
x16 = 50
}
val x17 = new { val data = x15; val length = x16 }
val x18 = VectorLength(Sym(17))
val x10 = new { val data = x9; val length = 100 }
val x23 = LoopArray(x18) { x19 => 
val x20 = VectorApply(Sym(17),Sym(19))
val x21 = VectorApply(Sym(10),Sym(19))
val x22 = x20+x21
x22
}
val x24 = new { val data = x23; val length = x18 }
val x25 = println(x24)

### next
install replacement for Sym(18)
install replacement for Sym(20)
install replacement for Sym(21)
--- code ---
val x3 = x0 > 0
val x28 = LoopArray(100) { x27 => 
0.0
}
var x16: Int = 0
var x31: Array[Double] = null
if (x3) {
x16 = 100
x31 = x28
} else {
val x30 = LoopArray(50) { x29 => 
0.0
}
x16 = 50
x31 = x30
}
val x38 = LoopArray(x16) { x34 => 
val x35 = x31.apply(x34)
val x36 = x28.apply(x34)
val x37 = x35+x36
x37
}
val x39 = new { val data = x38; val length = x16 }
val x40 = println(x39)
